userRouter.put(
  "/change-password",
  authenticateToken,
  validateUpdatePassword,
  async (req, res) => {
    const { user_id } = req.user;
    const { currentPassword, newPassword } = req.body;

    try {
      const { data: user, error } = await supabase
        .from("users")
        .select("password")
        .eq("user_id", user_id)
        .single();

      if (error || !user) {
        return res.status(404).json({ error: "ไม่พบผู้ใช้งานในระบบ" });
      }

      const isPasswordValid = await bcrypt.compare(
        currentPassword,
        user.password
      );
      if (!isPasswordValid) {
        return res.status(400).json({ error: "รหัสผ่านปัจจุบันไม่ถูกต้อง" });
      }

      const hashedPassword = await bcrypt.hash(newPassword, 10);
      const { data, error: updateError } = await supabase
        .from("users")
        .update({ password: hashedPassword })
        .eq("user_id", user_id);

      if (updateError) {
        console.error("เกิดข้อผิดพลาดในการอัปเดตรหัสผ่าน:", updateError);
        return res.status(400).json({ error: "อัปเดตรหัสผ่านล้มเหลว" });
      }

      res.json({ message: "เปลี่ยนรหัสผ่านสำเร็จ" });
    } catch (error) {
      console.error("Error in PUT /change-password:", error);
      res.status(500).json({ error: "เกิดข้อผิดพลาดในการเปลี่ยนรหัสผ่าน" });
    }
  }
);